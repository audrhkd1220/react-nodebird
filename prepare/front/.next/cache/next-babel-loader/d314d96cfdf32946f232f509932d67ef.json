{"ast":null,"code":"var _jsxFileName = \"/Users/wooseok/Study/react-nodebird/prepare/front/pages/index.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react'; //next는 이 부분이 필요 없음\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\n//next는 pages폴더()를 인식하여 폴더내 파일들을 전부 개별적인 페이지(컴포넌트)로 만들어준다. (코드 스플릿)\n\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    hasMorePosts = _useSelector2.hasMorePosts;\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      //window.scrollY = 스크롤 얼마나 내렸는지\n      //document.documentElement.clientHeight = 화면에 보이는 위 지점부터 아래지점까지의 길이(높이)\n      //document.documentElement.scrollHeight = 화면에 보이지 않는 곳까지 총 길이(높이)\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      //데이터가 쌓이기 때문에 항상 이벤트 제거를 하는 리턴을 작성해야한다!\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, _this), mainPosts.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 38\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n_s(Home, \"3+eEzLa3EDcdDKa1fmrfORK3GP0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"sources":["/Users/wooseok/Study/react-nodebird/prepare/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from 'react'; //next는 이 부분이 필요 없음\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\n//next는 pages폴더()를 인식하여 폴더내 파일들을 전부 개별적인 페이지(컴포넌트)로 만들어준다. (코드 스플릿)\n\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector((state) => state.user);\n    const { mainPosts, hasMorePosts } = useSelector((state) => state.post);\n\n    useEffect(() => {\n        dispatch({\n            type: LOAD_POSTS_REQUEST,\n        });\n    }, []);\n\n    useEffect(() => {\n        function onScroll() {\n            //window.scrollY = 스크롤 얼마나 내렸는지\n            //document.documentElement.clientHeight = 화면에 보이는 위 지점부터 아래지점까지의 길이(높이)\n            //document.documentElement.scrollHeight = 화면에 보이지 않는 곳까지 총 길이(높이)\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n            if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n                if(hasMorePosts) {\n                    dispatch({\n                        type: LOAD_POSTS_REQUEST,\n                    });\n                }\n            }\n        }\n        window.addEventListener('scroll', onScroll);\n        return () => { //데이터가 쌓이기 때문에 항상 이벤트 제거를 하는 리턴을 작성해야한다!\n            window.removeEventListener('scroll', onScroll);\n        }\n    }, []);\n\n    return (\n        <AppLayout>\n            {me && <PostForm />}\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n        </AppLayout>\n    );\n}\n\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO,CAAC,CAAC;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C;;AAEA,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC;AAEtD,IAAMC,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACf,IAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,mBAAeC,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAzCC,EAAE,gBAAFA,EAAE;EACV,oBAAoCT,WAAW,CAAC,UAACO,KAAK;MAAA,OAAKA,KAAK,CAACG,IAAI;IAAA,EAAC;IAA9DC,SAAS,iBAATA,SAAS;IAAEC,YAAY,iBAAZA,YAAY;EAE/Bd,SAAS,CAAC,YAAM;IACZQ,QAAQ,CAAC;MACLO,IAAI,EAAET;IACV,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENN,SAAS,CAAC,YAAM;IACZ,SAASgB,QAAQ,GAAG;MAChB;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAACC,eAAe,CAACC,YAAY,EAAEF,QAAQ,CAACC,eAAe,CAACE,YAAY,CAAC;MACzG,IAAGL,MAAM,CAACC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACC,YAAY,GAAGF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAG,GAAG,EAAE;QACrG,IAAGV,YAAY,EAAE;UACbN,QAAQ,CAAC;YACLO,IAAI,EAAET;UACV,CAAC,CAAC;QACN;MACJ;IACJ;IACAa,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAET,QAAQ,CAAC;IAC3C,OAAO,YAAM;MAAE;MACXG,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEV,QAAQ,CAAC;IAClD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,SAAS;IAAA,WACLL,EAAE,iBAAI,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,SAAG,EAClBE,SAAS,CAACc,GAAG,CAAC,UAACf,IAAI;MAAA,oBAAK,QAAC,QAAQ;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACgB,EAAE;QAAA;QAAA;QAAA;MAAA,SAAgB;IAAA,EAAC;EAAA;IAAA;IAAA;IAAA;EAAA,SACxD;AAEpB,CAAC;AAAA,GArCKrB,IAAI;EAAA,QACWN,WAAW,EACbC,WAAW,EACUA,WAAW;AAAA;AAAA,KAH7CK,IAAI;AAuCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}