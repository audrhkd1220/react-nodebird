{"ast":null,"code":"var _jsxFileName = \"/Users/wooseok/Study/react-nodebird/prepare/front/components/CommentForm.js\";\nimport { Button, Form, Input } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoadding\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId,\n        id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40,\n          zIndex: 1\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        loadding: addCommentLoadding,\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","useCallback","useEffect","PropTypes","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoadding","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["/Users/wooseok/Study/react-nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from 'antd';\nimport { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useInput from '../hooks/useInput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone, addCommentLoadding } = useSelector((state) => state.post);\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n    useEffect(() => {\n        if(addCommentDone) {\n            setCommentText('');\n        }\n    }, [addCommentDone]);\n\n    const onSubmitComment = useCallback(() => {\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId, id },\n        });\n    }, [commentText, id]);\n\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item>\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\n                <Button \n                    style={{ position: 'absolute', right: 0, bottom: -40, zIndex: 1}} \n                    type=\"primary\" \n                    htmlType='submit'\n                    loadding={addCommentLoadding}\n                >삐약</Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n}\n\nexport default CommentForm;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AAAC;AAEvD,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC9B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,MAAM;IAAEI,cAAc;IAAEC;EAAmB,CAAC,GAAGV,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EACjF,MAAM,CAACQ,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEvEF,SAAS,CAAC,MAAM;IACZ,IAAGa,cAAc,EAAE;MACfI,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMK,eAAe,GAAGnB,WAAW,CAAC,MAAM;IACtCS,QAAQ,CAAC;MACLW,IAAI,EAAEd,mBAAmB;MACzBe,IAAI,EAAE;QAAEC,OAAO,EAAEN,WAAW;QAAEO,MAAM,EAAEf,IAAI,CAACE,EAAE;QAAEc,MAAM;QAAEd;MAAG;IAC9D,CAAC,CAAC;EACN,CAAC,EAAE,CAACM,WAAW,EAAEN,EAAE,CAAC,CAAC;EAErB,oBACI,QAAC,IAAI;IAAC,QAAQ,EAAES,eAAgB;IAAA,uBAC5B,QAAC,IAAI,CAAC,IAAI;MAAA,wBACN,QAAC,KAAK,CAAC,QAAQ;QAAC,KAAK,EAAEH,WAAY;QAAC,QAAQ,EAAEC,mBAAoB;QAAC,IAAI,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9E,QAAC,MAAM;QACH,KAAK,EAAE;UAAEQ,QAAQ,EAAE,UAAU;UAAEC,KAAK,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC,EAAE;UAAEC,MAAM,EAAE;QAAC,CAAE;QACjE,IAAI,EAAC,SAAS;QACd,QAAQ,EAAC,QAAQ;QACjB,QAAQ,EAAEb,kBAAmB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACT;AAEf,CAAC;AAEDR,WAAW,CAACsB,SAAS,GAAG;EACpBrB,IAAI,EAAEN,SAAS,CAAC4B,MAAM,CAACC;AAC3B,CAAC;AAED,eAAexB,WAAW"},"metadata":{},"sourceType":"module"}