{"ast":null,"code":"var _jsxFileName = \"/Users/wooseok/Study/react-nodebird/prepare/front/components/PostCard.js\";\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //me?.id 옵셔널 체이닝(새로운 문법)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useCallback","useState","PropTypes","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useSelector","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","content","Comments","length","comments","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/wooseok/Study/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\n\nconst PostCard = ({ post }) => {\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const onToggleLike = useCallback(() => {\n        setLiked((prev) => !prev);\n    }, []);\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened((prev) => !prev);\n    }, []);\n    const id = useSelector((state) => state.user.me?.id); //me?.id 옵셔널 체이닝(새로운 문법)\n    return (\n        <div style={{ marginBottom: 20 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id \n                            ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\">삭제</Button>\n                                </>\n                            ) \n                            : <Button>신고</Button>}\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n                <Card.Meta \n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                />\n            </Card>\n            {commentFormOpened && (\n                <div>\n                    <CommentForm post={post}/>\n                    <List\n                        header={`${post.Comments.length}개의 댓글`}\n                        itemLayout=\"horizontal\"\n                        dataSource={post.comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname}\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                                    content={item.content}\n                                />\n                            </li>\n                        )}\n                    />\n                </div>)}\n            {/*<CommentForm />*/}\n            {/*<Comments />*/}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n}\n\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}